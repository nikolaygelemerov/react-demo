:global(.Navigation) {
  display: grid;
  grid-template-columns: repeat(3, 0.1fr);
  grid-gap: 1rem;
  justify-content: center;
  align-items: center;
  background-color: $color16;

  @include boxShadow();

  @media only screen and (max-width: 1680px) {
    grid-template-columns: repeat(3, 0.2fr);
  }

  @media only screen and (max-width: 1000px) {
    grid-template-columns: repeat(3, 1fr);
  }
}

:global(a.NavLink) {
  display: flex;
  justify-content: center;
  flex: 1;
  height: 4rem;
  padding: 1rem;
  color: $color5;
  font-size: 1.8rem;
  text-decoration: none;
  text-align: center;
  border-radius: 0.6rem;
}

:global(a.NavLinkActive) {
  display: flex;
  justify-content: center;
  flex: 1;
  height: 4rem;
  padding: 1rem;
  color: $color8;
  font-size: 1.8rem;
  text-decoration: none;
  text-align: center;
  border-radius: 0.2rem;
  border-bottom: 0.2rem solid $color8;
}

:global(label) {
  color: rgba($color16, 0.8);
  font-weight: 600;
  cursor: pointer;
}

:global(input) {
  display: inline-block;
  width: 100%;
  height: 4.2rem;
  padding: 0.5rem 1rem;
  color: $color19;
  font-size: 1.8rem;
  background-color: rgba($color9, 0.2);
  border: 0.1rem solid $color9;
  border-radius: 0.6rem;
  outline: none;
  box-shadow: 0 0.1rem 0 $color9;
  transition: background-color 300ms linear;

  &:focus,
  :not(:empty) {
    background-color: rgba($color4, 0.6);
  }
}

:global(button) {
  display: inline-block;
  height: 4rem;
  margin-top: 1.8rem;
  padding: 0.5rem 1rem;
  color: $colorTxt;
  font-size: 1.8rem;
  font-weight: bold;
  text-decoration: none;
  text-shadow: 0 -0.1rem 0 rgba($color1, 0.5);
  background-color: $color7;
  border: 0.1rem solid $color9;
  border-radius: 0.5rem;
  box-shadow: $boxShadow;
  transition: background-color 300ms linear;
  cursor: pointer;

  &:hover {
    background-color: rgba($color7, 0.7);
  }
}

:global(ul.Search) {
  position: relative;
  width: 100%;
  margin: 1rem 0 2rem;
  padding: 3rem;
  border: 0.1rem solid $color7;
  border-radius: 0.4rem;
  box-shadow: $boxShadow_2;
  transition: max-width 300ms ease-in-out;

  :global(li.Search) {
    display: inline-block;
    margin: 1rem;
    padding: 0.5rem;
    color: $color19;
    font-size: 1.4rem;
    border: 0.1rem solid $color2;
    border-radius: 0.4rem;
    box-shadow: $boxShadow;
    transition: background-color 300ms linear;
    cursor: pointer;

    &:hover {
      //  background-color: $color3;
    }
  }
}

:global(span.Width) {
  position: absolute;
  top: 0.5rem;
  left: 50%;
  color: rgba($color16, 0.8);
  transform: translateX(-50%);
}

:global(span.Height) {
  position: absolute;
  left: 0;
  top: 45%;
  color: rgba($color16, 0.8);
  transform: rotate(-90deg);
}

:global(.Glow) {
  position: relative;
  background-color: transparent;

  ::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    animation-name: gradient-shadow;
    animation-timing-function: ease;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    border-radius: 5px;
  }
}

@keyframes gradient-shadow {
  0% {
    box-shadow: 0 0 5px 3px #86c5a6, 0 0 4px 2px #86c5a6;
  }
  20% {
    box-shadow: 0 0 5px 3px #0ff, 0 0 4px 2px #0ff;
  }
  40% {
    box-shadow: 0 0 5px 3px rgb(0, 217, 255), 0 0 4px 2px rgb(0, 217, 255);
  }
  60% {
    box-shadow: 0 0 5px 3px #01afff, 0 0 4px 2px #01afff;
  }
  80% {
    box-shadow: 0 0 5px 3px rgb(0, 110, 255), 0 0 4px 2px rgb(0, 110, 255);
  }
  100% {
    box-shadow: 0 0 5px 3px #2847af, 0 0 4px 2px #2847af;
  }
}

:global(.Container) {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-gap: 2rem;
  padding: 2rem;
  font-size: $fontLarge;

  :global(.Controls) {
    display: grid;
    grid-area: 1 / 1 / 1 / 3;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 0fr);
    grid-gap: 2rem;
  }

  :global(.List) {
    display: grid;
    grid-area: 1 / 3 / 1 / 6;
    justify-items: center;
    align-items: center;
    max-height: calc(100vh - 8rem);
    padding: 2rem;
    overflow-y: auto;
  }
}

:global(.Loader) {
  > * {
    fill: $color7;
  }
}
